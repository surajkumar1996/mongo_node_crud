<!DOCTYPE html>
<html lang="en">
<head>
  <title>Bootstrap Example</title>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.4.1/css/bootstrap.min.css">
  <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.16.0/umd/popper.min.js"></script>
  <script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.4.1/js/bootstrap.min.js"></script>
</head>
<body>

    <div id="res">

    </div>

<div class="container">
    <div class="row">  
        
        <div class="col-lg-2">

  </div>
  <div class="col-lg-8">
      


    <form id="form">
        <div class="form-group">
          <label for="todo">Todo</label>
          <input type="text" class="form-control" id="todoUserInput" placeholder="TODO">
        
        </div>
       
        <button type="submit" class="btn btn-primary">post</button>
      </form>
</div>
<div class="col-lg-2">

</div>
</div>

<div class="row">  
        
    <div class="col-lg-2">

</div>
<div class="col-lg-8">
    <ul class="list-group" id="display">
        
       
      </ul>
  
</div>
<div class="col-lg-2">

</div>
</div>

</div>
<script>
$(function(){
    $.get('/db').then((response)=>{
      
        $.map(response,(v)=>$('#res').append('<h3>'+v.todo+'</h3>'+'<p>'+v.age+'</p>'))
    })

    var input=$('#todoUserInput').val();
    var req={
        "todo":input
    }
    // form.submit((e)=>{
    //     e.preventDefault();
    //     fetch('/dbpost',{
    //             method:"post",
    //             body:JSON.stringify({todo:todoUserInput.val()}),
    //             headers:{
    //                 "Content-Type":"application/json"
    //             }
    //         }).then((response)=>{
    //             return response.json()
    //         })
    //         .then((data)=>{
    //         $.map(data,(v)=>$('#res').append('<h3>'+v.todo+'</h3>'));
    //     })
    // })
    // // form.submit((e)=>{
    //     e.preventDefault();
    //     $.post('/dbpost',JSON.stringify(input).then((response)=>{
    //         return response.json();
    //     }).then((data)=>{
    //         $.map(data,(v)=>$('#res').append('<h3>'+v.todo+'</h3>'));
    //     })
    // })
   

})

</script>

<script>

    $(function(){
        const display=$('#display');
        const form=$('#form');
        const todoUserInput=$('#todoUserInput');

        const getTodos=()=>{
            fetch('/db',{method:'get'}).then((response)=>{
                return response.json();
            }).then((data)=>{
                console.log(data);
                displayTodos(data);
            })
        }
        getTodos();

        const resetTodosInput=()=>{
            todoUserInput.val('');
        }

      
      
        const buildIDS=(todo)=>{
            return{
                editID:"edit_"+todo._id,
                deleteID:"delete_"+todo._id,
                listItemID:"ListItem"+todo._id,
                todoId:"todo_"+todo._id
            }
        }
        const buildTemplate=(todo,ids)=>{
            return `<li class="list-group-item" id="${ids.listItemID}">
                <div class="row">
                    <div class="col-md-4" id="${ids.todoID}">${todo.todo}
                        </div>
                            <div class="col-md-4">
                        </div>
                            <div class="col-md-4 text-right">
                                <button type="button" class="btn btn-secondary" id="${ids.editID}">Edit</button>
                                <button type="button" class="btn btn-danger" id="${ids.deleteID}">Delete</button>
                                

                        </div>
                    
                    </div>
                </li>`;
        }

const editTodo=(todo,todoID,editID)=>{
    let editBtn= $(`#${editID}`);
    editBtn.click(()=>{
        console.log("sjksjkskj");
        fetch(`/${todo._id}`,{
            method:"put",
            headers:{
                "Content-Type":"application/json"
            },
            body:JSON.stringify({todo:todoUserInput.val()})
        }).then((response)=>{
            return response.json()
        }).then((data)=>{
            if(data.ok==1){
                let todoIndex=$(`#${todoID}`);
                console.log("hello");
                todoIndex.html(data.value.todo);
                resetTodosInput();
            }
        })
    }) 
}

        const deleteTodo=(todo,listItemID,deleteID)=>{
            let deleteBtn=$(`#${deleteID}`);
            deleteBtn.click(()=>{
                fetch(`/${todo._id}`,{
                    method:"delete"
                }).then((response)=>{
                    return response.json();
                }).then((data)=>{
                    if(data.ok==1){
                        $(`#${listItemID}`).remove();
                    }
                })
            })
        }




        const displayTodos=(data)=>{
            data.forEach((todo)=>{
                let ids=buildIDS(todo);
                display.append(buildTemplate(todo,ids));
                editTodo(todo,ids.todoID,ids.editID);
                deleteTodo(todo,ids.listItemID,ids.deleteID);    

            });
        } 
        form.submit((e)=>{
            e.preventDefault();
            fetch('/dbpost',{
                method:"post",
                body:JSON.stringify({todo:todoUserInput.val()}),
                headers:{
                    "Content-Type":"application/json"
                }
            }).then((response)=>{

             
                return response.json();

            }).then((data)=>{
                // $.map(data,(v)=>$('#res').append('<h2>'+v.todo+'</h2>'));
                if(data.result.ok==1 && data.result.n==1){
                    let ids=buildIDS(data.document);
                    display.append(buildTemplate(data.document,ids));
                }
                resetTodosInput();
            })
        })
    })
</script>
</body>
</html>
